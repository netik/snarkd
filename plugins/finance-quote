#!/usr/local/bin/perl 
#
# Example stock-ticker program.  Can look up stocks from multiple
# markets and return the results in local currency.
#
# Revision: 1.1 

use strict;
use Finance::Quote;

my $CURRENCY = "USD";	# Set preferred currency here, or empty string for
			# no conversion.

# The stocks array contains a set of array-references.  Each reference
# has the market as the first element, and a set of stocks thereafter.

my @STOCKS = (	      [qw/usa MSFT RHAT LNUX AAPL/]
	     );

# These define the format.  The first item in each pair is the label,
# the second is the printf-style formatting, the third is the width
# of the field (used in printing headers).

my @labels = (["symbol",  "%5s",  5],
	      ["last",  "%8.2f",  8],
	      ["net",   "%8.2f",  8],
	      ["close", "%8.2f",  8]);


# --- END CONFIG SECTION ---

my $quoter = Finance::Quote->new();
my $clear  = `clear`;			# So we can clear the screen.


$quoter->set_currency($CURRENCY) if $CURRENCY;	# Set default currency.

foreach my $stockset (@STOCKS) {
    my ($exchange, @symbols) = @$stockset;
    my %info = $quoter->fetch($exchange,@symbols);
    
    foreach my $symbol (@symbols) {
	next unless $info{$symbol,"success"}; # Skip failures.
	foreach my $tuple (@labels) {
	    my ($label,$format) = @$tuple;
	    
		if ($info{$symbol,$label} < 0) { 
		    print "%%R";
		}
		
		if ($info{$symbol,$label} > 0) { 
		    print "%%G";
		}

		if ($info{$symbol,$label} == 0) { 
		    print "%%A";
		}
		

   	    printf $format,$info{$symbol,$label};
	}

	    print "\\n";

    
    }
}

__END__
