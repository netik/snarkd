.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Config::INI::Simple 3"
.TH Config::INI::Simple 3 "2006-11-06" "perl v5.8.0" "User Contributed Perl Documentation"
.SH "NAME"
Config::INI::Simple \- Simple reading and writing from an INI file\-\-with preserved
comments, too!
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  # in your INI file
\&  ; The name of the server block to use
\&  ; Use one of the blocks below.
\&  server = Server01
.Ve
.PP
.Vb 5
\&  ; All server blocks need a host and port.
\&  ; These should be under each block.
\&  [Server01]
\&  host=foo.bar.com
\&  port=7775
.Ve
.PP
.Vb 3
\&  [Server02]
\&  host=foobar.net
\&  port=2235
.Ve
.PP
.Vb 2
\&  # in your Perl script
\&  use Config::INI::Simple;
.Ve
.PP
.Vb 1
\&  my $conf = new Config::INI::Simple;
.Ve
.PP
.Vb 2
\&  # Read the config file.
\&  $conf->read ("settings.ini");
.Ve
.PP
.Vb 2
\&  # Change the port from "Server02" block
\&  $conf->{Server02}->{port} = 2236;
.Ve
.PP
.Vb 2
\&  # Change the "server" to "Server02"
\&  $conf->{default}->{server} = 'Server02';
.Ve
.PP
.Vb 2
\&  # Write the changes.
\&  $conf->write ("settings.ini");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Config::INI::Simple is for very simplistic reading and writing of \s-1INI\s0 files. A new object must
be created for each \s-1INI\s0 file (an object keeps all the data read in from an \s-1INI\s0 which is used
on the write method to write to the \s-1INI\s0). It also keeps all your comments and original order
intact.
.SH "INI FILE FORMAT"
.IX Header "INI FILE FORMAT"
A basic \s-1INI\s0 format is:
.PP
.Vb 4
\&  [Block1]
\&  VAR1=Value1
\&  VAR2=Value2
\&  ...
.Ve
.PP
.Vb 4
\&  [Block2]
\&  VAR1=Value1
\&  VAR2=Value2
\&  ...
.Ve
.PP
Comments begin with either a ; or a # and must be on their own line. The object's hashref
will contain the variables under their blocks. The default block is \*(L"default\*(R" (see \fBnew\fR for
defaults). So, \fB$conf\-\fR{Block2}\->{\s-1VAR2\s0} = Value2>
.SH "METHODS"
.IX Header "METHODS"
.Sh "new"
.IX Subsection "new"
Creates a new Config::INI::Simple object. You can pass in certain settings here:
.PP
\&\fB_\|_file_\|_\fR \- Sets the file path of the \s-1INI\s0 file to read. If this value is set, then \fBread\fR
and \fBwrite\fR won't need the \s-1FILE\s0 parameter.
.PP
\&\fB_\|_default_\|_\fR \- Sets the name of the default block. Defaults to 'default'
.PP
\&\fB_\|_eol_\|_\fR \- Set the end-of-line characters for writing an \s-1INI\s0 file. Defaults to Win32's \en
.PP
\&\fB_\|_append_\|_\fR \- Set to true and new hash keys will be appended to the file upon writing. If a
new block is added to the hashref, that block will be appended to the end of the file followed
by its data. Defaults to 1.
.PP
\&\fB_\|_debug_\|_\fR \- Set to true and you will see debugging messages. Defaults to 0.
.Sh "read (\s-1FILE\s0)"
.IX Subsection "read (FILE)"
Read data from \s-1INI\s0 file \fB\s-1FILE\s0\fR. The object's hashref will contain this \s-1INI\s0 file's contents.
.Sh "write (\s-1FILE\s0)"
.IX Subsection "write (FILE)"
Writes to the \s-1INI\s0 file \fB\s-1FILE\s0\fR, inputting all the hashref variables found in the object.
.Sh "reset"
.IX Subsection "reset"
Resets the internal hashref of the \s-1INI\s0 reader object. The four settings specified with \fBnew\fR
will be reset to what they were when you created the object. All other data is removed from
memory.
.SH "CHANGES"
.IX Header "CHANGES"
.Vb 2
\&  Version 0.01
\&  - Initial release.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
C. J. Kirsle <kirsle \-at\- rainbowboi.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2006 by A. U. Thor
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.7 or,
at your option, any later version of Perl 5 you may have available.
